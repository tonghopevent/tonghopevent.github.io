{"version":3,"sources":["components/messenger/custom/TongHopEvent.jsx","Config.js","Utils.js","components/messenger/utils.js","serviceWorker.js","index.js"],"names":["Card","children","style","padding","marginBottom","border","position","TongHopEvent","React","Component","state","templates","loading","editingIndex","editingText","showing","openTemplateDialog","this","setState","loadTemplates","async","makeRequest","Object","keys","map","id","save","text","fillToInput","t","window","setMessageInput","componentDidMount","render","maxWidth","width","height","Maxheight","background","zIndex","top","left","transform","overflow","right","onClick","i","value","onChange","e","target","rows","cursor","nl2br","Config","PROD","process","BACKEND","SOCKETIO","SOCKETIO_MODULE","SELF_PAGE_ID","INBOX_TITLE","INBOX_SEND_ABILITY","INBOX_UNREAD_ABILITY","INBOX_IGNORED_CONVERSATION","INBOX_MARK_READ_ON_OPEN","VERSION","CustomMessengerWidget","ORG_CODE","Utils","settings","markReadOnOpenInbox","token","getLocalStorage","location","href","name","lastRun","last","now","Date","res","data","error","removeLocalStorage","reload","localStorage","setItem","JSON","stringify","item","getItem","parse","removeItem","timestamp","gmt","date","offset","getTimezoneOffset","d","getDate","m","getMonth","y","getFullYear","hh","getHours","mm","getMinutes","matched","replace","match","length","uname","_id","url","method","payload","_url","indexOf","axios","doc","org","textArea","document","createElement","body","appendChild","focus","select","msg","execCommand","console","log","err","removeChild","navigator","clipboard","writeText","then","fallbackCopyTextToClipboard","trim","split","arr","isLast","results","RegExp","exec","decodeURIComponent","_psid","getParameterByName","inboxData","senders","n","removeVietnameseTones","toLowerCase","baseUrl","open","setLocalStorage","loadSettings","endpoint","qs","getToken","post","params","checkError","getMessageDirectionLastData","arg","getMessageDirection","message","senderId","from","isFromPage","mergeNewMessages","oldArr","newArr","addedMessages","isExistInOldArr","some","unshift","mergeNewConversations","convIds","filter","conv","getTargetId","ev","recipient","sender","s","str","Boolean","hostname","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","rootElement","getElementById","Index","component","Suspense","fallback","className","ReactDOM","pathname","lazy","serviceWorker","ready","registration","unregister"],"mappings":"2MAKA,SAASA,EAAT,GAA2B,IAAb,SAACC,GAAW,EACxB,OAAO,qBAAKC,MAAO,CACjBC,QAAS,OACTC,aAAc,OACdC,OAAQ,oBACRC,SAAU,YAJL,SAKHL,IAGN,MAAMM,UAAqBC,IAAMC,UAAW,cAAD,yBACzCC,MAAQ,CACNC,UAAW,GACXC,SAAS,EACTC,aAAc,KACdC,YAAa,KACbC,SAAS,GAN8B,KAczCC,mBAAqB,KACnBC,KAAKC,SAAS,CAAEH,SAAS,KAfc,KAkBzCI,cAAgBC,UACdH,KAAKC,SAAS,CAAEN,SAAS,IACzB,IAAID,QAAmBU,YAAY,MAAO,oBAC1CV,EAAYW,OAAOC,KAAKZ,GAAWa,KAAIC,IAAE,CAAOA,QAAOd,EAAUc,OACjER,KAAKC,SAAS,CACZP,YAAWC,SAAS,EACpBC,aAAc,KAAMC,YAAa,QAxBI,KA4BzCY,KAAON,UACL,MAAM,UAAET,EAAF,aAAaE,EAAb,YAA2BC,GAAgBG,KAAKP,MACtDO,KAAKC,SAAS,CAAEN,SAAS,UACnBS,YAAY,OAAQ,mBAAoB,GAAI,CAChDI,GAAId,EAAUE,GAAcY,GAC5BE,KAAMb,GAA4B,YAEpCG,KAAKE,iBAnCkC,KAsCzCS,YAAeC,GAAM,KACnBC,OAAOC,gBAAgBF,EAAEF,MACzBV,KAAKC,SAAS,CAAEH,SAAS,KA/B3BiB,oBACEf,KAAKE,gBACLW,OAAOd,mBAAqBC,KAAKD,mBAgCnCiB,SACE,MAAM,QAAErB,EAAF,UAAWD,EAAX,aAAsBE,EAAtB,YAAoCC,EAApC,QAAiDC,GAAYE,KAAKP,MACxE,OAAKK,EAEE,sBAAKb,MAAO,CACjBI,SAAU,QACV4B,SAAU,QACVC,MAAO,QACPC,OAAQ,OACRC,UAAW,OACXC,WAAY,QACZC,OAAQ,MACRC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXrC,OAAQ,iBACRF,QAAS,OACTwC,SAAU,QAbL,UAeL,wBAAQzC,MAAO,CAAEI,SAAU,WAAYsC,MAAO,QAAUC,QAAS,IAAM5B,KAAKC,SAAS,CAAEH,SAAS,IAAhG,0BACA,uBAAK,wBACHH,GAAWD,EAAUa,KAAI,CAACK,EAAGiB,IACtBjC,IAAiBiC,EACpB,eAAC9C,EAAD,WACA,0BACEE,MAAO,CAACiC,MAAO,QACfY,MAAOjC,EACPkC,SAAWC,GAAMhC,KAAKC,SAAS,CAAEJ,YAAamC,EAAEC,OAAOH,QACvDI,KAAM,IAER,wBAAQN,QAAS5B,KAAKS,KAAtB,kBACC,KACD,wBAAQmB,QAAS,IAAM5B,KAAKC,SAAS,CAAEL,aAAc,KAAMC,YAAa,OAAxE,sBATWgC,GAWX,eAAC9C,EAAD,WACA,mBAAGE,MAAO,CAACkD,OAAQ,WAAYP,QAAS5B,KAAKW,YAAYC,GAAzD,SACGwB,IAAMxB,EAAEF,QAEX,wBAAQkB,QAAS,IAAM5B,KAAKC,SAAS,CAAEL,aAAciC,EAAGhC,YAAae,EAAEF,OAAvE,kBACC,KACD,wBAAQkB,QAAS5B,KAAKW,YAAYC,GAAlC,0BACC,OAPUiB,KAWhBlC,GAAW,iCAAQ,cAAC,IAAD,SA3CD,MC7CzB,MAAM0C,EAAS,CACbC,MAAMC,EACNC,QAAS,gDACTC,SAAU,oCACVC,gBAAiB,eACjBC,aAAc,kBACdC,YAAa,eACbC,oBAAoB,EACpBC,sBAAsB,EACtBC,2BAA4B,oBAC5BC,yBAAyB,EACzBC,QAAS,SACTC,sBDiFa5D,GC9EA+C,O,gCC7Bf,oFAKA,MAAMc,EAAW,CACf,GAAM,iBACN,GAAM,2CACN,GAAM,oCACN,GAAM,4CACN,GAAM,+CAGR,MAAMC,EACe,sBACjBf,IAAOW,wBAA0BI,EAAMC,SAASC,oBAGnC,kBACb,MAAMC,EAAQH,EAAMI,gBAAgB,SACpC,GAAKD,EACA,OAAOA,EADA1C,OAAO4C,SAASC,KAAO,UAIjB,qBAACC,GACd9C,OAAO+C,UAAS/C,OAAO+C,QAAU,IACtC,MAAMC,EAAOhD,OAAO+C,QAAQD,IAAS,EAC/BG,EAAMC,KAAKD,MACjB,GAAIA,EAAMD,EAAO,IACf,OAAO,EAEPhD,OAAO+C,QAAQD,GAAQG,EAIV,kBAACE,GACZA,GAAOA,EAAIC,MAA2B,kBAAnBD,EAAIC,KAAKC,QAC9Bd,EAAMe,mBAAmB,SACzBtD,OAAO4C,SAASC,KAAO,KACvB7C,OAAO4C,SAASW,UAIE,uBAACT,EAAM7B,GAC3BuC,aAAaC,QAAQ,gBAAkBX,EAAMY,KAAKC,UAAU1C,IAGxC,uBAAC6B,GACrB,MAAMc,EAAOJ,aAAaK,QAAQ,gBAAkBf,IAAS,KAC7D,OAAa,OAATc,EAAsB,KACnBF,KAAKI,MAAMF,GAGK,0BAACd,GACxBU,aAAaO,WAAW,gBAAkBjB,GAG3B,kBAACkB,EAAWC,GAC3B,IAAIC,EAAO,IAAIhB,KAAKc,GAAa,GACjC,GAAIC,EAAK,CACP,MAAME,EAAoC,IAA3BD,EAAKE,oBACpBF,EAAO,IAAIhB,KAAKc,EAAYG,EAAa,KAAJF,EAAS,KAEhD,IAAII,EAAIH,EAAKI,UACTC,EAAIL,EAAKM,WAAa,EACtBC,EAAIP,EAAKQ,cACb,MAAM,GAAN,OAAUL,EAAI,GAAK,IAAM,IAAzB,OAA8BA,EAA9B,YAAmCE,EAAI,GAAK,IAAM,IAAlD,OAAuDA,EAAvD,YAA4DE,GAG7C,kBAACT,EAAWC,GAC3B,IAAIC,EAAO,IAAIhB,KAAKc,GAAa,GACjC,GAAIC,EAAK,CACP,MAAME,EAAoC,IAA3BD,EAAKE,oBACpBF,EAAO,IAAIhB,KAAKc,EAAYG,EAAa,KAAJF,EAAS,KAEhD,IAAIU,EAAKT,EAAKU,WACVC,EAAKX,EAAKY,aACd,MAAM,GAAN,OAAUH,EAAK,GAAK,IAAM,IAA1B,OAA+BA,EAA/B,YAAqCE,EAAK,GAAK,IAAM,IAArD,OAA0DA,GAG9B,iCAC5B,MAAME,GADkC,uDAAJ,IACfC,QAAQ,OAAQ,KAAKC,MAAM,6BAChD,IAAKF,GAAWA,EAAQG,OAAS,EAAG,OAAO,KAC3C,MAAMC,EAAQJ,EAAQ,GACtB,GAAc,WAAVI,EAAoB,OAAO,KAC/B,MAAMC,EAAMD,EAAMF,MAAM,mBACxB,OAAKG,GAAOA,EAAIF,OAAS,EAAUC,EACvBC,EAAI,GAGA,mBAACC,GAAoC,IAA/BC,EAA8B,uDAArB,MAAOC,EAAc,uDAAJ,GAChD,MAAM7C,EAAQH,EAAMI,gBAAgB,SAC9B6C,EAAOH,IAA6B,IAAtBA,EAAII,QAAQ,KAAc,IAAM,KAAO,SAAW/C,EACtE,OAAOgD,IAAMJ,GAAQE,EAAMD,GAGX,qBAChB,OAD2B,uDAAJ,IACZP,QAAQ,6BAA8B,IAGlC,kBAACW,GAChB,OAAOrD,EAASqD,EAAIC,KAGY,mCAAC/F,GACjC,IAAIgG,EAAWC,SAASC,cAAc,YACtCF,EAAS5E,MAAQpB,EAGjBgG,EAASzH,MAAMsC,IAAM,IACrBmF,EAASzH,MAAMuC,KAAO,IACtBkF,EAASzH,MAAMI,SAAW,QAE1BsH,SAASE,KAAKC,YAAYJ,GAC1BA,EAASK,QACTL,EAASM,SAET,IACE,IACIC,EADaN,SAASO,YAAY,QACf,aAAe,eACtCC,QAAQC,IAAI,sCAAwCH,GACpD,MAAOI,GACPF,QAAQjD,MAAM,iCAAkCmD,GAGlDV,SAASE,KAAKS,YAAYZ,GAGF,2BAAChG,GACpB6G,UAAUC,UAIfD,UAAUC,UAAUC,UAAU/G,GAAMgH,MAAK,WACvCP,QAAQC,IAAI,kDACX,SAASC,GACVF,QAAQjD,MAAM,+BAAgCmD,MAN9CjE,EAAMuE,4BAA4BjH,GAU1B,aAACA,GACX,OAAOA,EAAKkH,OAAO/B,QAAQ,MAAO,IAAIgC,MAAM,MAAMtH,KAAI,SAASkE,EAAM5C,EAAGiG,GACtE,MAAMC,EAASlG,IAAMiG,EAAI/B,OAAS,EAClC,OAAO,iCAAetB,GAAOsD,GAAU,yBAArBlG,MAIG,0BAAC8B,GACxB,MAAMuC,EAAMrF,OAAO4C,SAASC,KAE5BC,EAAOA,EAAKkC,QAAQ,UAAW,QAE/B,IACImC,EADQ,IAAIC,OAAO,OAAStE,EAAO,qBACnBuE,KAAKhC,GACzB,OAAK8B,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGnC,QAAQ,MAAO,MAD5B,GADH,KAKT,iBACZ,MACMuC,GADMhF,EAAMiF,mBAAmB,gBAAkB,IACrCvC,MAAM,0BAExB,OADasC,EAAQA,EAAM,GAAK,OAIlB,iBAACE,GACf,MAAM,GAAC9H,EAAD,QAAK+H,GAAWD,EAChB3E,EAAO4E,EAAQtE,KAAK,GAAGN,KACvB6E,EAAIC,YAAsB9E,EAAK+E,eAAe7C,QAAQ,cAAe,KACrE8C,EAAU9H,OAAO4C,SAASC,KAAKmC,QAAQ,MAAO,IACpDhF,OAAO+H,KAAP,UAAeD,EAAf,iBAA+BnI,EAA/B,YAAqCgI,GAAK,UAAUzB,QAOpC,mBAAC1D,GACjBD,EAAMyF,gBAAgB,WAAYxF,GAClCD,EAAMC,SAAW,IAAKA,GACtBD,EAAM0F,gBAxKJ1F,EAiKGC,SAAW,CAChBC,qBAAqB,KACjBF,EAAMI,gBAAgB,aAAe,IAUtC,MAAMpD,EAAcD,eAAOgG,EAAQ4C,GAAkC,IAAxBC,EAAuB,uDAAlB,GAAInC,EAAc,uDAAP,GAClEmC,EAAGzF,MAAQH,EAAM6F,WACjBF,EAAWA,EAASlD,QAAQ,UAAW,YACvC,MAAM7B,EAAiB,SAAXmC,QACFI,IAAM2C,KAAN,UAAc7G,IAAOG,SAArB,OAA+BuG,GAAYlC,EAAM,CAAEsC,OAAQH,UAC3DzC,IAAMJ,GAAN,UAAiB9D,IAAOG,SAAxB,OAAkCuG,GAAY,CAAEI,OAAQH,IAElE,OADA5F,EAAMgG,WAAWpF,GACVA,EAAIC,MAGEb,O,gCCpMf,sLAEA,MAAMiG,EAA8B,CAACC,IAAK,KAAMtF,IAAK,MACxCuF,EAAuBC,IAClC,GAAIH,EAA4BC,MAAQE,EACtC,OAAOH,EAA4BrF,IAC9B,CACLqF,EAA4BC,IAAME,EAClC,MAAMC,EAAWD,EAAQE,KAAKlJ,GACxBmJ,EAAaF,IAAapH,IAAOM,cAA6B,oBAAb8G,EAEvD,OADAJ,EAA4BrF,IAAM2F,EAAa,WAAa,WACrDN,EAA4BrF,MAI1B4F,EAAmB,CAACC,EAAQC,KACvC,MAAMC,EAAgB,GAChBC,EAAmBxJ,GAAOqJ,EAAOI,MAAKhD,GAAOA,EAAIzG,KAAOA,IAC9D,IAAK,MAAMyG,KAAO6C,EAAQ,CACxB,GAAIE,EAAgB/C,EAAIzG,IAAK,MAC7BuJ,EAAcG,QAAQjD,GAExB,MAAO,IAAI4C,KAAWE,IAGXI,EAAwB,CAACN,EAAQC,KAC5C,MAAMM,EAAU,GAChB,MAAO,IAAIN,KAAWD,GAAQQ,QAAOC,IAC9BF,EAAQE,EAAK9J,MAChB4J,EAAQE,EAAK9J,KAAM,GACZ,MAOA+J,EAAeC,IAC1B,IAAIA,EAAGjC,QAIA,OAAIiC,EAAGC,WAAaD,EAAGC,UAAUjK,KAAO6B,IAAOM,aAC7C6H,EAAGC,UAAUjK,GACXgK,EAAGE,QAAUF,EAAGE,OAAOlK,KAAO6B,IAAOM,aACvC6H,EAAGE,OAAOlK,GAEV,KARP,IAAK,MAAMmK,KAAKH,EAAGjC,QAAQtE,KACzB,GAAI0G,EAAEnK,KAAO6B,IAAOM,aAAc,OAAOgI,EAAEnK,IAYpCiI,EAAyBmC,GAyBpCA,GAHAA,GADAA,GAHAA,GADAA,GAHAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAI/E,QAAQ,kHAAqC,MAC7CA,QAAQ,0EAAyB,MACjCA,QAAQ,kCAAa,MACrBA,QAAQ,kHAAqC,MAC7CA,QAAQ,4EAAyB,MACjCA,QAAQ,oCAAa,MACrBA,QAAQ,UAAK,MACbA,QAAQ,kHAAsC,MAC9CA,QAAQ,0EAA0B,MAClCA,QAAQ,kCAAc,MACtBA,QAAQ,kHAAsC,MAC9CA,QAAQ,4EAA0B,MAClCA,QAAQ,oCAAc,MACtBA,QAAQ,UAAM,MAGdA,QAAQ,sCAAuC,KAC/CA,QAAQ,wBAAyB,KAGjCA,QAAQ,OAAO,MACf+B,QAGA/B,QAAQ,yFAAyF,M,wGCjEzFgF,QACW,cAA7BhK,OAAO4C,SAASqH,UAEe,UAA7BjK,OAAO4C,SAASqH,UAEhBjK,OAAO4C,SAASqH,SAAShF,MACvB,2D,2CCRJiF,IAAY,CACVC,IAAK,6EACLC,aAAc,CAAC,IAAIC,IAAaC,gBAChCC,iBAAkB,MAItB,MAAMC,EAAc1E,SAAS2E,eAAe,QAatCC,EAAQ,QAAEC,UAAWhM,GAAb,SACZ,cAAC,IAAMiM,SAAP,CAAgBC,SAAU,qBAAKC,UAAU,gBAAzC,SACE,cAACnM,EAAD,OAIJoM,IAAS5K,OAAO,cAACuK,EAAD,CAAOC,UAjBjB3K,OAAO4C,SAASoI,SAAS/F,MAAM,WACjCqB,QAAQC,IAAI/E,IAAOY,SACnBG,IAAM0F,eACCvJ,IAAMuM,MAAK,IAAM,qEACfjL,OAAO4C,SAASoI,SAAS/F,MAAM,UACjCvG,IAAMuM,MAAK,IAAM,6DAEjBvM,IAAMuM,MAAK,IAAM,wDAUoBT,GD6F1C,kBAAmB9D,WACrBA,UAAUwE,cAAcC,MAAMtE,MAAKuE,IACjCA,EAAaC,kB","file":"static/js/main.dd373b49.chunk.js","sourcesContent":["import React from 'react';\nimport nl2br from 'react-nl2br';\nimport Loader from '@chatscope/chat-ui-kit-react/dist/cjs/Loader';\nimport { makeRequest } from '../../../Utils';\n\nfunction Card({children}) {\n  return <div style={{\n    padding: '10px',\n    marginBottom: '10px',\n    border: '#cecece solid 2px',\n    position: 'relative',\n  }}>{children}</div>\n}\n\nclass TongHopEvent extends React.Component {\n  state = {\n    templates: [],\n    loading: true,\n    editingIndex: null,\n    editingText: null,\n    showing: false,\n  };\n\n  componentDidMount() {\n    this.loadTemplates();\n    window.openTemplateDialog = this.openTemplateDialog;\n  }\n\n  openTemplateDialog = () => {\n    this.setState({ showing: true });\n  };\n\n  loadTemplates = async () => {\n    this.setState({ loading: true });\n    let templates = (await makeRequest('get', '/inbox/templates'));\n    templates = Object.keys(templates).map(id => ({ id, ...templates[id] }));\n    this.setState({\n      templates, loading: false,\n      editingIndex: null, editingText: null\n    });\n  }\n\n  save = async () => {\n    const { templates, editingIndex, editingText } = this.state;\n    this.setState({ loading: true });\n    await makeRequest('post', '/inbox/templates', {}, {\n      id: templates[editingIndex].id,\n      text: editingText ? editingText : '(empty)',\n    });\n    this.loadTemplates();\n  }\n\n  fillToInput = (t) => () => {\n    window.setMessageInput(t.text);\n    this.setState({ showing: false });\n  }\n\n  render() {\n    const { loading, templates, editingIndex, editingText, showing } = this.state;\n    if (!showing) return null;\n\n    return <div style={{\n      position: 'fixed',\n      maxWidth: '100vw',\n      width: '600px',\n      height: '80vh',\n      Maxheight: '80vh',\n      background: 'white',\n      zIndex: '100',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      border: '#bbb solid 2px',\n      padding: '10px',\n      overflow: 'auto',\n    }}>\n      <button style={{ position: 'absolute', right: '10px' }} onClick={() => this.setState({ showing: false })}>[x] Thoát</button>\n      <br/><br/>\n      {!loading && templates.map((t, i) => {\n        return editingIndex === i\n          ? <Card key={i}>\n            <textarea\n              style={{width: '100%'}}\n              value={editingText}\n              onChange={(e) => this.setState({ editingText: e.target.value })}\n              rows={5}\n            ></textarea>\n            <button onClick={this.save}>Save</button>\n            {'  '}\n            <button onClick={() => this.setState({ editingIndex: null, editingText: null })}>Cancel</button>\n          </Card>\n          : <Card key={i}>\n            <p style={{cursor: 'pointer'}} onClick={this.fillToInput(t)}>\n              {nl2br(t.text)}\n            </p>\n            <button onClick={() => this.setState({ editingIndex: i, editingText: t.text })}>Edit</button>\n            {'  '}\n            <button onClick={this.fillToInput(t)}>COPY &amp; PASTE</button>\n            {'  '}\n            {/* <button onClick={() => }>Delete</button> */}\n          </Card>\n      })}\n      {loading && <center><Loader /></center>}\n    </div>\n  }\n}\n\nexport default TongHopEvent;","import TongHopEvent from './components/messenger/custom/TongHopEvent';\n\n/*var ConfigDebug = {\n  BACKEND: 'http://localhost:5000/tonghopevent'\n}\nvar ConfigProduction = {\n  BACKEND: 'https://nuichatbot.herokuapp.com/tonghopevent'\n}\n\nvar Config = ConfigDebug\nvar MODE = process.env.REACT_APP_MODE\nif (MODE === 'production')\n  Config = ConfigProduction*/\n\nconst Config = {\n  PROD: process.env.REACT_APP_MODE === 'production',\n  BACKEND: 'https://nuichatbot.herokuapp.com/tonghopevent',\n  SOCKETIO: 'https://nuichatbot.herokuapp.com/',\n  SOCKETIO_MODULE: 'tonghopevent',\n  SELF_PAGE_ID: '242401956152220',\n  INBOX_TITLE: 'tonghopevent',\n  INBOX_SEND_ABILITY: true,\n  INBOX_UNREAD_ABILITY: true,\n  INBOX_IGNORED_CONVERSATION: 't_229190944264162',\n  INBOX_MARK_READ_ON_OPEN: false,\n  VERSION: '5.3_r2',\n  CustomMessengerWidget: TongHopEvent,\n}\n\nexport default Config","import React from 'react'\r\nimport axios from 'axios'\r\nimport Config from './Config'\r\nimport { removeVietnameseTones } from './components/messenger/utils'\r\n\r\nconst ORG_CODE = {\r\n  'f1': 'Nhóm HS, SV',\r\n  'f2': 'CLB thuộc trường học',\r\n  'f3': 'Trường công lập',\r\n  'f4': 'Tổ chức phi lợi nhuận',\r\n  'p1': 'Tổ chức có lợi nhuận',\r\n}\r\n\r\nclass Utils {\r\n  static loadSettings() {\r\n    Config.INBOX_MARK_READ_ON_OPEN = Utils.settings.markReadOnOpenInbox\r\n  }\r\n\r\n  static getToken() {\r\n    const token = Utils.getLocalStorage('token')\r\n    if (!token) window.location.href = '#/login'\r\n    else return token\r\n  }\r\n\r\n  static checkDebounce(name) {\r\n    if (!window.lastRun) window.lastRun = {}\r\n    const last = window.lastRun[name] || 0\r\n    const now = Date.now()\r\n    if (now - last < 500) {\r\n      return true\r\n    } else {\r\n      window.lastRun[name] = now\r\n    }\r\n  }\r\n\r\n  static checkError(res) {\r\n    if (res && res.data && res.data.error === 'Invalid token') {\r\n      Utils.removeLocalStorage('token')\r\n      window.location.href = '#/'\r\n      window.location.reload()\r\n    }\r\n  }\r\n\r\n  static setLocalStorage(name, value) {\r\n    localStorage.setItem('tonghopevent:' + name, JSON.stringify(value))\r\n  }\r\n  \r\n  static getLocalStorage(name) {\r\n    const item = localStorage.getItem('tonghopevent:' + name) || null\r\n    if (item === null) return null\r\n    return JSON.parse(item)\r\n  }\r\n  \r\n  static removeLocalStorage(name) {\r\n    localStorage.removeItem('tonghopevent:' + name)\r\n  }\r\n  \r\n  static getDateStr(timestamp, gmt) {\r\n    let date = new Date(timestamp || 1)\r\n    if (gmt) {\r\n      const offset = date.getTimezoneOffset() * 60000\r\n      date = new Date(timestamp + offset + gmt*3600*1000)\r\n    }\r\n    let d = date.getDate()\r\n    let m = date.getMonth() + 1\r\n    let y = date.getFullYear()\r\n    return `${d < 10 ? '0' : ''}${d}-${m < 10 ? '0' : ''}${m}-${y}`\r\n  }\r\n\r\n  static getTimeStr(timestamp, gmt) {\r\n    let date = new Date(timestamp || 1)\r\n    if (gmt) {\r\n      const offset = date.getTimezoneOffset() * 60000\r\n      date = new Date(timestamp + offset + gmt*3600*1000)\r\n    }\r\n    let hh = date.getHours()\r\n    let mm = date.getMinutes()\r\n    return `${hh < 10 ? '0' : ''}${hh}h${mm < 10 ? '0' : ''}${mm}`\r\n  }\r\n\r\n  static extractFacebookUsername(text = '') {\r\n    const matched = text.replace('/pg/', '/').match(/[facebok]+\\.com\\/([^?/]+)/)\r\n    if (!matched || matched.length < 1) return null\r\n    const uname = matched[1]\r\n    if (uname === 'events') return null\r\n    const _id = uname.match(/-([0-9]{7,20})$/)\r\n    if (!_id || _id.length < 1) return uname\r\n    else return _id[1]\r\n  }\r\n\r\n  static makeRequest(url, method = 'get', payload = {}) {\r\n    const token = Utils.getLocalStorage('token')\r\n    const _url = url + (url.indexOf('?') !== -1 ? '&' : '?') + 'token=' + token\r\n    return axios[method](_url, payload)\r\n  }\r\n\r\n  static cleanFBLink(url = '') {\r\n    return url.replace(/[&?](__|eid|fref)[^&?\\s]+/g, '')\r\n  }\r\n\r\n  static getOrgName(doc) {\r\n    return ORG_CODE[doc.org]\r\n  }\r\n\r\n  static fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n    \r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n  \r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n  \r\n    try {\r\n      var successful = document.execCommand('copy');\r\n      var msg = successful ? 'successful' : 'unsuccessful';\r\n      console.log('Fallback: Copying text command was ' + msg);\r\n    } catch (err) {\r\n      console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n  \r\n    document.body.removeChild(textArea);\r\n  }\r\n\r\n  static copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n      Utils.fallbackCopyTextToClipboard(text);\r\n      return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function() {\r\n      console.log('Async: Copying to clipboard was successful!');\r\n    }, function(err) {\r\n      console.error('Async: Could not copy text: ', err);\r\n    });\r\n  }\r\n\r\n  static nl2br(text) {\r\n    return text.trim().replace(/\\r/g, '').split('\\n').map(function(item, i, arr) {\r\n      const isLast = i === arr.length - 1\r\n      return <span key={i}>{item}{!isLast && <br/>}</span>\r\n    })\r\n  }\r\n\r\n  static getParameterByName(name) {\r\n    const url = window.location.href;\r\n    /*eslint-disable */\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    /*eslint-enable */\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\r\n    var results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n\r\n  static getPsid() {\r\n    const _id = Utils.getParameterByName('psid_hashed') || '';\r\n    const _psid = _id.match(/[0-9]{3,20}[A-Z]{3,10}/);\r\n    const psid = _psid ? _psid[0] : 'none';\r\n    return psid;\r\n  }\r\n\r\n  static goToInbox(inboxData) {\r\n    const {id, senders} = inboxData;\r\n    const name = senders.data[0].name;\r\n    const n = removeVietnameseTones(name.toLowerCase()).replace(/[^a-z0-9]+/g, '-');\r\n    const baseUrl = window.location.href.replace(/#.*/, '');\r\n    window.open(`${baseUrl}#/msg/${id}/${n}`, '_blank').focus();\r\n  }\r\n\r\n  static settings = {\r\n    markReadOnOpenInbox: false,\r\n    ...(Utils.getLocalStorage('settings') || {})\r\n  }\r\n  static setSettings(settings) {\r\n    Utils.setLocalStorage('settings', settings)\r\n    Utils.settings = { ...settings }\r\n    Utils.loadSettings()\r\n  }\r\n}\r\n\r\n// used by inbox component\r\nexport const makeRequest = async (method, endpoint, qs = {}, body = {}) => {\r\n  qs.token = Utils.getToken()\r\n  endpoint = endpoint.replace('/inbox/', '/inbox2/');\r\n  const res = method === 'post'\r\n    ? await axios.post(`${Config.BACKEND}${endpoint}`, body, { params: qs })\r\n    : await axios[method](`${Config.BACKEND}${endpoint}`, { params: qs })\r\n  Utils.checkError(res)\r\n  return res.data\r\n}\r\n\r\nexport default Utils\r\n","import Config from '../../Config';\n\nconst getMessageDirectionLastData = {arg: null, res: null};\nexport const getMessageDirection = (message) => {\n  if (getMessageDirectionLastData.arg === message) {\n    return getMessageDirectionLastData.res;\n  } else {\n    getMessageDirectionLastData.arg = message;\n    const senderId = message.from.id;\n    const isFromPage = senderId === Config.SELF_PAGE_ID || senderId === '182794865548469';\n    getMessageDirectionLastData.res = isFromPage ? 'outgoing' : 'incoming';\n    return getMessageDirectionLastData.res;\n  }\n};\n\nexport const mergeNewMessages = (oldArr, newArr) => {\n  const addedMessages = [];\n  const isExistInOldArr = (id) => oldArr.some(msg => msg.id === id);\n  for (const msg of newArr) {\n    if (isExistInOldArr(msg.id)) break;\n    addedMessages.unshift(msg);\n  }\n  return [...oldArr, ...addedMessages];\n};\n\nexport const mergeNewConversations = (oldArr, newArr) => {\n  const convIds = {};\n  return [...newArr, ...oldArr].filter(conv => {\n    if (!convIds[conv.id]) {\n      convIds[conv.id] = true;\n      return true;\n    } else {\n      return false;\n    }\n  });\n}\n\nexport const getTargetId = (ev) => {\n  if (ev.senders) {\n    for (const s of ev.senders.data) {\n      if (s.id !== Config.SELF_PAGE_ID) return s.id;\n    }\n  } else if (ev.recipient && ev.recipient.id !== Config.SELF_PAGE_ID) {\n    return ev.recipient.id;\n  } else if (ev.sender && ev.sender.id !== Config.SELF_PAGE_ID) {\n    return ev.sender.id;\n  } else {\n    return null;\n  }\n}\n\n/*eslint-disable */\nexport const removeVietnameseTones = (str) => {\n  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,\"a\"); \n  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,\"e\"); \n  str = str.replace(/ì|í|ị|ỉ|ĩ/g,\"i\"); \n  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,\"o\"); \n  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,\"u\"); \n  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,\"y\"); \n  str = str.replace(/đ/g,\"d\");\n  str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\n  str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\n  str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\n  str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\n  str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\n  str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\n  str = str.replace(/Đ/g, \"D\");\n  // Some system encode vietnamese combining accent as individual utf-8 characters\n  // Một vài bộ encode coi các dấu mũ, dấu chữ như một kí tự riêng biệt nên thêm hai dòng này\n  str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // ̀ ́ ̃ ̉ ̣  huyền, sắc, ngã, hỏi, nặng\n  str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // ˆ ̆ ̛  Â, Ê, Ă, Ơ, Ư\n  // Remove extra spaces\n  // Bỏ các khoảng trắng liền nhau\n  str = str.replace(/ + /g,\" \");\n  str = str.trim();\n  // Remove punctuations\n  // Bỏ dấu câu, kí tự đặc biệt\n  str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g,\" \");\n  return str;\n};\n/*eslint-enable */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `/data/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Config from './Config';\nimport Utils from './Utils';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nif (process.env.REACT_APP_MODE === 'production') {\n  Sentry.init({\n    dsn: 'https://eed214d9c56c4e7085cccd764a9ac6a8@o1087634.ingest.sentry.io/6101146',\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 0.05,\n  });\n}\n\nconst rootElement = document.getElementById('root');\nconst getApp = () => {\n  if (window.location.pathname.match(/\\/data/)) {\n    console.log(Config.VERSION);\n    Utils.loadSettings();\n    return React.lazy(() => import('./App'));\n  } else if (window.location.pathname.match(/\\/form/)) {\n    return React.lazy(() => import('./form'));\n  } else {\n    return React.lazy(() => import('./landing/Landing'));\n  }\n};\n\nconst Index = ({component: Component}) => (\n  <React.Suspense fallback={<div className=\"gtco-loader\"></div>}>\n    <Component />\n  </React.Suspense>\n);\n\nReactDOM.render(<Index component={getApp()} />, rootElement);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}