{"version":3,"sources":["Theme.js","form/FormUploadButton.jsx","form/FormField.jsx","form/data.js","form/FormConfirmation.jsx","form/FormQuestions.js","form/Form.jsx","form/index.js"],"names":["createMuiTheme","palette","primary","main","blueGrey","secondary","error","orange","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","auth","getAuth","signInWithEmailAndPassword","then","userCredential","user","console","log","catch","errorCode","code","errorMessage","message","UploadButton","value","onChange","uploading","setUploading","useState","imgRef","setImgRef","upload","useCallback","async","file","ev","target","files","ext","type","newFile","Promise","resolve","reject","Resizer","imageFileResizer","f","e","resizeFile","size","alert","ref","Date","now","snap","uploadBytes","url","getDownloadURL","replace","deleteImage","deleteObject","CircularProgress","src","alt","className","Button","variant","color","onClick","component","style","marginRight","accept","hidden","classes","input","width","maxWidth","marginBottom","container","display","flexWrap","cardStyle","marginTop","marginLeft","FormField","title","subtitle","required","children","Card","CardContent","Typography","gutterBottom","FormControl","TextInput","placeholder","TextField","margin","autoComplete","LongTextInput","rows","multiline","fullWidth","MultipleCheckboxes","moreLabel","FormGroup","Object","keys","map","k","FormControlLabel","control","Checkbox","checked","label","undefined","other","MultipleCheckboxesLimitedHeight","UploadFileInput","YesOrNo","click","b","VN_CITIES","CHAT_SPEECH_TYPE_REGEX","CHAT_SPEECH_TYPE_WARN","checkWarning","doc","res","matched","entries","filter","v","join","match","checkSpeechTypeWarning","FormConfirmation","warn","onSubmit","clearWarn","open","setOpen","React","useEffect","handleClose","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","FormQuestions","element","props","name","defaultValue","checkError","populateToDoc","trim","cls","Utils","getParameterByName","atLeastOneFilled","values","some","t","hasOther","otherHasHash","arr","key","a","push","length","urls","val","c","dependsOn","Form","setValues","q","getDefaultValues","errors","setErrors","hasError","setHasErrors","loading","setLoading","success","setSuccess","setWarn","docRecord","setDocRecord","window","TONGHOPEVENT_CONTEXT","data","decodeURIComponent","location","href","hashPsid","org","split","psid","substr","hash","toLowerCase","getUserContext","checkIfHasError","isTest","_doc","ctx","axios","post","Sentry","response","submitForm","onPreSubmit","onFieldChanged","theme","Theme","CssBaseline","AppBar","position","Toolbar","flexGrow","disabled","rel","Config","VERSION"],"mappings":"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","file":"static/js/9.b596cec1.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport orange from '@material-ui/core/colors/orange';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: { main: blueGrey[700] },\r\n    secondary: { main: blueGrey[200] },\r\n    error: { main: orange[900] }\r\n  }\r\n})","import React, { useCallback, useState } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { Backup } from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport Resizer from 'react-image-file-resizer';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyClx2o-nDz6lLhzH_p5T_zmwHEQESnFTlk',\n  authDomain: 'chatbotcnh.firebaseapp.com',\n  databaseURL: 'https://chatbotcnh.firebaseio.com',\n  projectId: 'chatbotcnh',\n  storageBucket: 'chatbotcnh.appspot.com',\n  messagingSenderId: '344360709927',\n  appId: '1:344360709927:web:e4b99ee1dd466c0b9a8302'\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\nconst auth = getAuth();\nsignInWithEmailAndPassword(auth, 'tonghopevent@ngxson.com', 'tonghopevent')\n  .then((userCredential) => {\n    const user = userCredential.user;\n    console.log(user);\n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.error(errorCode, errorMessage);\n  });\n\nconst resizeFile = (file) => new Promise((resolve, reject) => {\n  try {\n    Resizer.imageFileResizer(\n      file,\n      1000,\n      1000,\n      'JPEG',\n      75,\n      0,\n      (f) => resolve(f),\n      'file'\n    );\n  } catch (e) {\n    reject(e);\n  }\n});\n\nexport const UploadButton = ({value, onChange}) => {\n  const [uploading, setUploading] = useState(false);\n  const [imgRef, setImgRef] = useState(null);\n\n  const upload = useCallback(async (ev) => {\n    let file = ev.target.files[0];\n    let ext = 'jpg';\n    const type = file.type;\n    if (type === 'image/jpeg') ext = 'jpg';\n    if (type === 'image/gif') ext = 'gif';\n    if (type === 'image/png') ext = 'png';\n    try {\n      const newFile = await resizeFile(file);\n      file = newFile;\n      ext = 'jpg';\n    } catch (e) {\n      // ignored\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      alert('Lỗi: file quá lớn. Hãy thử giảm độ phân giải ảnh xuống và sử dụng định dạng JPG.');\n      return;\n    }\n    setUploading(true);\n    const imgRef = ref(storage, `tonghopevent/images/${Date.now()}.${ext}`);\n    try {\n      const snap = await uploadBytes(imgRef, file);\n      const downloadURL = await getDownloadURL(snap.ref);\n      // eslint-disable-next-line\n      const url = downloadURL.replace(/&token=[A-Za-z0-9\\-]+/, '');\n      console.log(url);\n      onChange(url);\n    } catch (e) {\n      alert(e);\n    }\n    setImgRef(imgRef);\n    setUploading(false);\n  // eslint-disable-next-line\n  }, [imgRef]);\n\n  const deleteImage = useCallback(() => {\n    if (imgRef) {\n      deleteObject(imgRef);\n    }\n    onChange(null);\n  // eslint-disable-next-line\n  }, [imgRef]);\n\n  if (uploading) return (\n    <CircularProgress />\n  );\n\n  if (value) return (\n    <div>\n      <img src={value} alt='user uploaded' className='preview'></img>\n      <Button variant='outlined' color='primary' onClick={deleteImage}>\n        Xóa ảnh\n      </Button>\n    </div>\n  );\n\n  return (\n    <Button component='label' variant='outlined' color='primary'>\n      <Backup style={{marginRight: '5px'}} /> Tải ảnh lên\n      <input\n        type='file'\n        accept='image/png, image/gif, image/jpeg'\n        onChange={upload}\n        hidden\n      />\n    </Button>\n  );\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Button from '@material-ui/core/Button';\nimport { UploadButton } from './FormUploadButton';\n\nconst classes = {\n  input: {\n    width: '500px',\n    maxWidth: '100%',\n    marginBottom: '0.1em',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  cardStyle: {\n    maxWidth: '700px',\n    marginTop: '20px',\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  }\n}\n\nconst FormField = ({title, subtitle, required, children, error}) => {\n  return (\n    <Card style={classes.cardStyle}>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h6\" gutterBottom={true}>\n          {title}\n          {required && <span className=\"required\"> *</span>}\n        </Typography>\n        {error && <p className=\"error\">{error}</p>}\n        <Typography variant=\"body1\" component=\"small\" color=\"textSecondary\">\n          {subtitle}\n        </Typography>\n        <FormControl component=\"fieldset\">\n          {children}\n        </FormControl>\n      </CardContent>        \n    </Card>\n  );\n};\n\nexport const TextInput = ({value, title, subtitle, required, placeholder, onChange, error}) => {\n  return (\n    <FormField title={title} subtitle={subtitle} required={required} error={error}>\n      <TextField\n        type=\"text\"\n        value={value}\n        style={classes.input}\n        onChange={(e) => onChange(e.target.value)}\n        margin=\"normal\"\n        autoComplete=\"false\"\n        placeholder={placeholder}\n        variant=\"outlined\"\n      />\n    </FormField>\n  );\n};\n\nexport const LongTextInput = ({value, title, subtitle, required, placeholder, onChange, error, rows = 10}) => {\n  return (\n    <FormField title={title} subtitle={subtitle} required={required} error={error}>\n      <TextField\n        type=\"text\"\n        value={value}\n        style={{...classes.input, width: '100%'}}\n        onChange={(e) => onChange(e.target.value)}\n        margin=\"normal\"\n        autoComplete=\"false\"\n        placeholder={placeholder}\n        variant=\"outlined\"\n        multiline\n        rows={rows}\n        fullWidth\n      />\n    </FormField>\n  );\n};\n\nexport const MultipleCheckboxes = ({value = {}, title, subtitle, placeholder, required, onChange, error, moreLabel}) => {\n  return (\n    <FormField title={title} subtitle={subtitle} required={required} error={error}>\n      <FormGroup>\n        {Object.keys(value).map(k => k !== 'other' ? (\n          <FormControlLabel key={k} control={<Checkbox\n              checked={value[k]}\n              onChange={() => onChange({...value, [k]: !value[k]})}\n            />}\n            label={k}\n          />\n        ) : null)}\n        {value.other !== undefined && <TextField\n          label={moreLabel}\n          type=\"text\"\n          value={value.other || ''}\n          style={classes.input}\n          onChange={(e) => onChange({...value, other: e.target.value})}\n          margin=\"normal\"\n          autoComplete=\"false\"\n          placeholder={placeholder}\n          variant=\"outlined\"\n        />}\n      </FormGroup>\n    </FormField>\n  );\n};\n\nexport const MultipleCheckboxesLimitedHeight = ({value = {}, title, subtitle, required, onChange, error}) => {\n  return (\n    <FormField title={title} subtitle={subtitle} required={required} error={error}>\n      <FormGroup className=\"multiple-checkboxes-limited-height\">\n        <div>\n          {Object.keys(value).map(k => (\n            <FormControlLabel key={k} control={<Checkbox\n                checked={value[k]}\n                onChange={() => onChange({...value, [k]: !value[k]})}\n              />}\n              label={k}\n            />\n          ))}\n        </div>\n      </FormGroup>\n    </FormField>\n  );\n};\n\nexport const UploadFileInput = ({value, title, subtitle, required, onChange, error}) => {\n  return (\n    <FormField title={title} subtitle={subtitle} required={required} error={error}>\n      <UploadButton value={value} onChange={onChange} />\n    </FormField>\n  );\n};\n\nexport const YesOrNo = ({value = null, title, subtitle, required, onChange, error}) => {\n  const click = (b) => () => onChange(b);\n  return (\n    <FormField title={title} subtitle={subtitle} required={required} error={error}>\n      <div className=\"yes-or-no\">\n        <Button variant={value === true ? \"contained\" : \"outlined\"} color=\"primary\" onClick={click(true)}>\n          Có\n        </Button>\n        {'   '}\n        <Button variant={value === false ? \"contained\" : \"outlined\"} color=\"primary\" onClick={click(false)}>\n          Không\n        </Button>\n      </div>\n    </FormField>\n  );\n};\n","export const VN_CITIES = [\n  'Toàn quốc',\n  'Hà Nội',\n  'TP HCM',\n  'An Giang',\n  'Bà Rịa Vũng Tàu',\n  'Bạc Liêu',\n  'Bắc Kạn',\n  'Bắc Giang',\n  'Bắc Ninh',\n  'Bến Tre',\n  'Bình Dương',\n  'Bình Định',\n  'Bình Phước',\n  'Bình Thuận',\n  'Cà Mau',\n  'Cao Bằng',\n  'Cần Thơ',\n  'Đà Nẵng',\n  'Đắk Lắk',\n  'Đắk Nông',\n  'Đồng Nai',\n  'Đồng Tháp',\n  'Điện Biên',\n  'Gia Lai',\n  'Hà Giang',\n  'Hà Nam',\n  'Hà Tĩnh',\n  'Hải Dương',\n  'Hải Phòng',\n  'Hòa Bình',\n  'Hậu Giang',\n  'Hưng Yên',\n  'Khánh Hòa',\n  'Kiên Giang',\n  'Kon Tum',\n  'Lai Châu',\n  'Lào Cai',\n  'Lạng Sơn',\n  'Lâm Đồng',\n  'Long An',\n  'Nam Định',\n  'Nghệ An',\n  'Ninh Bình',\n  'Ninh Thuận',\n  'Phú Thọ',\n  'Phú Yên',\n  'Quảng Bình',\n  'Quảng Nam',\n  'Quảng Ngãi',\n  'Quảng Ninh',\n  'Quảng Trị',\n  'Sóc Trăng',\n  'Sơn La',\n  'Tây Ninh',\n  'Thái Bình',\n  'Thái Nguyên',\n  'Thanh Hóa',\n  'Thừa Thiên Huế',\n  'Tiền Giang',\n  'Trà Vinh',\n  'Tuyên Quang',\n  'Vĩnh Long',\n  'Vĩnh Phúc',\n  'Yên Bái',\n];","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport const CHAT_SPEECH_TYPE_REGEX = /(^|[^a-z])d?ạ([^a-z]|$)/;\nexport const CHAT_SPEECH_TYPE_WARN = 'chat_speech';\n\nconst checkSpeechTypeWarning = (doc) => {\n  const tmp = Object.entries(doc).filter(([k]) =>\n    k === 'name'\n    || k === 'description'\n    || k === 'linkfb'\n    || k === 'deadline'\n    || k === 'benefit'\n  ).map(([k, v]) => v).join('\\n');\n  const matched = tmp.match(CHAT_SPEECH_TYPE_REGEX);\n  console.log(matched);\n  return matched\n    ? CHAT_SPEECH_TYPE_WARN\n    : null;\n};\n\nexport const checkWarning = (doc) => {\n  let res = checkSpeechTypeWarning(doc);\n  if (res) return res;\n  return null;\n};\n\nexport const FormConfirmation = ({ warn, onSubmit, clearWarn }) => {\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    if (warn) setOpen(true);\n  }, [warn]);\n\n  const handleClose = () => {\n    setOpen(false);\n    clearWarn();\n  };\n\n  const handleConfirm = () => {\n    handleClose();\n    onSubmit();\n  };\n\n  return <>\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Xác nhận</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {warn === CHAT_SPEECH_TYPE_WARN && <>\n            Trong phần bạn điền, bạn có viết những từ như <b>\"dạ\"</b> hay <b>\"ạ\"</b>. Xin bạn chú ý, phần mềm sẽ <b>copy-paste trực tiếp câu bạn đã nhập lên bài đăng trên page</b>, vậy nên nếu bạn có viết mấy câu như vậy, xóa đi giúp Jiji nha!<br/>\n            <br/>\n            Còn nếu bạn chắc là tất cả đều ổn (có thể 😸 Jiji nhầm lẫn gì đó, mình chỉ là con mèo thôi mà!), thì bạn hãy bấm nút \"Xác nhận gửi\" dưới đây\n          </>}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n          Xác nhận gửi\n        </Button>\n        <Button onClick={handleClose} color=\"primary\">\n          Quay lại\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </>;\n};","import React from 'react';\nimport {\n  TextInput,\n  MultipleCheckboxes,\n  MultipleCheckboxesLimitedHeight,\n  LongTextInput,\n  UploadFileInput,\n  YesOrNo,\n} from './FormField';\nimport { VN_CITIES } from './data';\nimport Utils from '../Utils';\nimport { CHAT_SPEECH_TYPE_REGEX } from './FormConfirmation';\n\nexport const FormQuestions = [\n  {\n    element: (props) => (\n      <UploadFileInput\n        title=\"Ảnh cho bài đăng\"\n        subtitle={<>\n          Ảnh này sẽ được dùng để đăng lên fanpage, thường sẽ là avatar của dự án.<br/>\n          Lưu ý:<br/>\n          - Chúng mình KHÔNG CHẤP NHẬN ảnh chụp tập thể của BTC<br/>\n          - Không chấp nhận các ảnh dễ gây hiểu nhầm, hoặc có nội dung không lành mạnh<br/>\n          - Ảnh nên có tỷ lệ vuông (1:1) để hiện tốt trên cả instagram và facebook<br/>\n          - Chúng mình chỉ có thể đăng 1 ảnh trên 1 bài viết<br/>\n        </>}\n        required={true}\n        {...props}\n      />\n    ),\n    name: 'image',\n    defaultValue: () => null,\n    checkError: (value) => {\n      if (!value) return 'Bạn chưa chọn ảnh để đăng lên page chúng mình';\n    },\n    populateToDoc: (value, doc) => {\n      doc['image'] = [value];\n    },\n  },\n\n  {\n    element: (props) => (\n      <TextInput\n        title=\"Tên dự án/cuộc thi/sự kiện\"\n        subtitle=\"Hãy nhập 1 tên ngắn gọn cho dự án, cuộc thi hay sự kiện của bạn nhé\"\n        placeholder=\"Ví dụ: ABC Project...\"\n        required={true}\n        {...props}\n      />\n    ),\n    name: 'name',\n    defaultValue: () => '',\n    checkError: (value) => {\n      if (!value.trim()) return 'Bạn chưa điền tên dự án/cuộc thi/sự kiện';\n    },\n    populateToDoc: (value, doc) => {\n      doc['name'] = value.trim();\n    },\n  },\n\n  {\n    element: (props) => (\n      <MultipleCheckboxes\n        title=\"Phân loại\"\n        subtitle=\"Bạn có thể thêm phân mục dự án của bạn (nếu không có trong danh sách này) dưới dạng hashtag\"\n        moreLabel=\"Hoặc nhập thêm các hashtag khác...\"\n        placeholder=\"Ví dụ: #dự_án_ABC\"\n        required={true}\n        {...props}\n      />\n    ),\n    name: 'type',\n    defaultValue: () => {\n      const cls = Utils.getParameterByName('cls') || '';\n      const val = {\n        '#dự_án_giáo_dục': false,\n        '#dự_án_tình_nguyện': false,\n        '#dự_án_văn_hóa': false,\n        '#dự_án_nghệ_thuật': false,\n        '#dự_án_khoa_học': false,\n        '#dự_án_môi_trường': false,\n        '#cuộc_thi': !!cls.match(/contest/),\n        '#sự_kiện': !!cls.match(/event/),\n        'other': '',\n      };\n      return val;\n    },\n    checkError: (value) => {\n      const atLeastOneFilled = Object.values(value).some(t => !!t);\n      const hasOther = !!value.other.trim();\n      const otherHasHash = !!value.other.match(/#/);\n      if (!atLeastOneFilled) return 'Bạn chưa chọn phần này';\n      if (hasOther && !otherHasHash) return 'Phần ô điền phải có dấu hashtag, ví dụ #dự_án_ABC';\n    },\n    populateToDoc: (value, doc) => {\n      let cls = Utils.getParameterByName('cls') || 'project';\n      if (cls.match(/project/)) cls = 'project';\n      else if (cls.match(/contest/)) cls = 'contest';\n      else if (cls.match(/event/)) cls = 'event';\n      else cls = 'project';\n      const arr = Object.entries(value)\n        .filter(([key, value]) => key !== 'other' && value)\n        .map(a => a[0]);\n      const other = value.other.trim();\n      if (!!other) {\n        arr.push(other);\n      }\n      doc['cls'] = cls;\n      doc['type'] = arr;\n    },\n  },\n\n  {\n    element: (props) => (\n      <LongTextInput\n        title=\"Mô tả về dự án/cuộc thi/sự kiện\"\n        subtitle={<>\n          Lưu ý:<br/>\n          - Hãy viết thật chi tiết, để người đọc có thể hiểu dự án/cuộc thi/sự kiện của bạn hướng đến điều gì nhé.<br/>\n          - KHÔNG copy-paste link bài hỗ trợ truyền thông (phải viết đầy đủ nội dung vào đây)<br/>\n          - Các thông tin về nhà tài trợ sẽ bị xóa sau khi kiểm duyệt.<br/>\n          - Bạn cũng có thể để link đơn đăng ký (nếu có) trong phần mô tả<br/>\n        </>}\n        placeholder=\"Ví dụ: ABC Project là dự án được lập ra vì mục đích... Chúng mình hướng tới việc...\"\n        required={true}\n        rows={15}\n        {...props}\n      />\n    ),\n    name: 'description',\n    defaultValue: () => '',\n    checkError: (value) => {\n      const v = value.trim();\n      if (!v) return 'Bạn chưa điền phần mô tả này';\n      if (v.length < 400) return 'Phần mô tả cho dự án quá ngắn. Bạn hãy viết 1 cách chi tiết hơn (dự án của bạn làm gì, có ý nghĩa thế nào,...). Hãy viết chi tiết, KHÔNG copy-paste link bài viết';\n      // eslint-disable-next-line\n      const urls = v.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([^ \\n\\r\\t]+)/gi);\n      if (urls) {\n        for (const url of urls) {\n          if (url.match(/\\.\\.\\./)) return `Do phần mô tả bạn copy từ facebook, nên link sau: \"${url}\" đã bị facebook rút ngắn (có dấu 3 chấm). Vì vậy, độc giả sẽ không thể bấm vào được. Bạn nên đặt lại link gốc, hoặc dùng bit.ly hay bom.to để rút gọn link nhé!`;\n        }\n      }\n    },\n    populateToDoc: (value, doc) => {\n      doc['description'] = value.trim();\n    },\n  },\n\n  {\n    element: (props) => (\n      <MultipleCheckboxesLimitedHeight\n        title=\"Tỉnh, thành phố\"\n        subtitle=\"Nơi dự án / cuộc thi / sự kiện của bạn sẽ diễn ra. Bạn có thể chọn nhiều tỉnh, thành phố (hãy cuộn sang ngang để tìm)\"\n        required={true}\n        {...props}\n      />\n    ),\n    name: 'locations',\n    defaultValue: () => {\n      const val = {};\n      for (const c of VN_CITIES) val[c] = false;\n      return val;\n    },\n    checkError: (value) => {\n      const atLeastOneFilled = Object.values(value).some(t => !!t);\n      if (!atLeastOneFilled) return 'Bạn chưa chọn phần này';\n    },\n    populateToDoc: (value, doc) => {\n      const arr = Object.entries(value)\n        .filter(a => a[1])\n        .map(a => a[0]);\n      doc['locations'] = arr;\n    },\n  },\n\n  {\n    element: (props) => (\n      <TextInput\n        title=\"Link facebook page\"\n        subtitle=\"Hãy nhập link tới trang facebook chính của dự án, cuộc thi hay sự kiện của bạn nhé\"\n        placeholder=\"Ví dụ: https://www.facebook.com/tonghopevent\"\n        required={true}\n        {...props}\n      />\n    ),\n    name: 'linkfb',\n    defaultValue: () => '',\n    checkError: (value) => {\n      const v = value.trim();\n      if (!v) return 'Bạn chưa điền mục này';\n      if (!v.match(/(fb|facebook)\\.com/)) return 'Link bạn nhập không đúng định dạng. Ví dụ, link tới facebook của chúng mình phải là: https://www.facebook.com/tonghopevent';\n    },\n    populateToDoc: (value, doc) => {\n      doc['linkfb'] = value;\n    },\n  },\n\n  {\n    element: (props) => (\n      <YesOrNo\n        title=\"Dự án của bạn có tuyển nhân sự không?\"\n        subtitle=\"Ví dụ như tuyển TNV, tuyển Ban điều hành, người tham gia,...\"\n        required={true}\n        {...props}\n      />\n    ),\n    name: '_recruitment',\n    defaultValue: () => null,\n    checkError: (value) => {\n      if (value === null) return 'Bạn chưa chọn mục này';\n    },\n    populateToDoc: (value, doc) => null,\n  },\n\n  {\n    dependsOn: '_recruitment',\n    element: (props) => (\n      <MultipleCheckboxes\n        title=\"Yêu cầu đối tượng\"\n        moreLabel=\"Hoặc các đối tượng khác... (không bắt buộc điền)\"\n        placeholder=\"Khác...\"\n        {...props}\n      />\n    ),\n    name: 'wanted',\n    defaultValue: () => ({\n      'Ban điều hành': false,\n      'Tình nguyện viên': false,\n      'Người tham gia': false,\n      'other': '',\n    }),\n    checkError: (value) => null,\n    populateToDoc: (value, doc) => {\n      const arr = Object.entries(value)\n        .filter(([key, value]) => key !== 'other' && value)\n        .map(a => a[0]);\n      if (value.other) arr.push(value.other);\n      doc['wanted'] = arr;\n    },\n  },\n\n  {\n    dependsOn: '_recruitment',\n    element: (props) => (\n      <LongTextInput\n        title=\"Deadline tuyển nhân sự\"\n        subtitle=\"(Không bắt buộc) Nếu bạn có deadline riêng cho từng ban, bạn cũng có thể ghi rõ trong phần này nhé\"\n        placeholder=\"...\"\n        rows={2}\n        {...props}\n      />\n    ),\n    name: 'deadline',\n    defaultValue: () => '',\n    checkError: (value) => {\n      if (!value) return null;\n      if (value.match(CHAT_SPEECH_TYPE_REGEX)) {\n        return 'Bạn có viết những từ như \"dạ\" hay \"ạ\". Phần mềm sẽ copy-paste trực tiếp câu bạn đã nhập lên bài đăng. Vậy nên, bạn hãy xóa những câu như vậy đi nhé';\n      }\n      return null;\n    },\n    populateToDoc: (value, doc) => doc['deadline'] = value.trim(),\n  },\n\n  {\n    dependsOn: '_recruitment',\n    element: (props) => (\n      <LongTextInput\n        title=\"Quyền lợi thành viên khi tham gia dự án\"\n        subtitle=\"(Không bắt buộc) VD: như được chứng chỉ, được giao lưu, học hỏi kinh nghiệm về lĩnh vực gì,...\"\n        placeholder=\"VD: Tham gia ABC Project, bạn sẽ nhận được... và ngoài ra...\"\n        rows={7}\n        {...props}\n      />\n    ),\n    name: 'benefit',\n    defaultValue: () => '',\n    checkError: (value) => {\n      if (!value) return null;\n      if (value.match(CHAT_SPEECH_TYPE_REGEX)) {\n        return 'Bạn có viết những từ như \"dạ\" hay \"ạ\". Phần mềm sẽ copy-paste trực tiếp câu bạn đã nhập lên bài đăng. Vậy nên, bạn hãy xóa những câu như vậy đi nhé';\n      }\n      return null;\n    },\n    populateToDoc: (value, doc) => doc['benefit'] = value.trim(),\n  },\n\n  // Thông tin thêm\n\n  {\n    element: (props) => (\n      <TextInput\n        title=\"Bạn có lưu ý, câu hỏi gì cho admin không?\"\n        subtitle={<>\n          (Không bắt buộc) Ví dụ: muốn đăng bài vào ngày nào,...<br/>\n          (Ô điền này là cho admin đọc, nó sẽ không được ghi vào bài đăng lên facebook)\n        </>}\n        placeholder=\"...\"\n        {...props}\n      />\n    ),\n    name: 'feedback',\n    defaultValue: () => '',\n    checkError: (value) => null,\n    populateToDoc: (value, doc) => doc['feedback'] = value.trim(),\n  },\n\n];","import React, { useState, useEffect, useCallback } from 'react';\nimport Theme from '../Theme';\nimport Config from '../Config';\nimport axios from 'axios';\nimport '../App.css';\nimport '../bootstrap.css';\nimport './styles.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { FormQuestions } from './FormQuestions';\nimport { checkWarning, FormConfirmation } from './FormConfirmation';\nimport * as Sentry from '@sentry/browser';\n\nconst FORM_SUBMIT_ENDPOINT =  'https://tonghopevent-form-submit-btpjgpbvma-uc.a.run.app/form/submit';\n\nconst classes = {\n  input: {\n    marginBottom: '20px',\n    width: '500px',\n    maxWidth: '100%'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  cardStyle: {\n    maxWidth: '700px',\n    marginTop: '20px',\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  }\n}\n\nconst getDefaultValues = () => {\n  const values = {};\n  for (const q of FormQuestions) {\n    values[q.name] = q.defaultValue();\n  }\n  return values;\n};\n\nconst getUserContext = () => {\n  try {\n    const data = decodeURIComponent(window.location.href.match(/data=([^&]+)/)[1]);\n    const [hashPsid, org] = data.split(';');\n    return {\n      psid: hashPsid.substr(0, hashPsid.length - 5),\n      hash: hashPsid.substr(-5),\n      org: org.toLowerCase(),\n    };\n  } catch (e) {\n    alert('ERROR: NO CONTEXT');\n    return null;\n  }\n};\n\nconst submitForm = async (doc) => {\n  try {\n    const ctx = window.TONGHOPEVENT_CONTEXT;\n    const data = {...doc, ...ctx};\n    // on backend: validate & remove \"hash\", add \"created\": Date.now()\n    await axios.post(FORM_SUBMIT_ENDPOINT, data);\n    return true;\n  } catch (e) {\n    Sentry.captureException(e);\n    console.error(e);\n    if (e.response?.data?.error) {\n      alert(`Có lỗi xảy ra, xin vui lòng chụp màn hình và báo lại với admin: ${e.response.data.error}`);\n    }\n    return false;\n  }\n};\n\nconst Form = () => {\n  const [values, setValues] = useState(getDefaultValues());\n  const [errors, setErrors] = useState({});\n  const [hasError, setHasErrors] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [warn, setWarn] = useState(null);\n  const [docRecord, setDocRecord] = useState(null);\n\n  if (!window.TONGHOPEVENT_CONTEXT) {\n    window.TONGHOPEVENT_CONTEXT = getUserContext();\n    console.log(window.TONGHOPEVENT_CONTEXT);\n  }\n\n  const checkIfHasError = (errors) => {\n    return Object.values(errors).some(t => !!t);\n  };\n\n  const onSubmit = useCallback(async (_doc) => {\n    const isTest = window.location.href.match(/nui_test/);\n    const doc = _doc || docRecord;\n    if (!checkIfHasError(errors)) {\n      setLoading(true);\n      console.log(doc);\n      if (!isTest) {\n        const success = await submitForm(doc);\n        setSuccess(success);\n        if (!success) alert('Có lỗi xảy ra, xin vui lòng thử lại!');\n      } else { // nui_test\n        setSuccess(true);\n      }\n      setLoading(false);\n    }\n  }, [docRecord, errors]);\n\n  const onPreSubmit = useCallback(() => {\n    const doc = {};\n    const errors = {};\n    for (const q of FormQuestions) {\n      const name = q.name;\n      const v = values[name];\n      errors[name] = q.checkError(v);\n      q.populateToDoc(v, doc);\n    }\n    setErrors(errors);\n    // make sure there is no error\n    if (!checkIfHasError(errors)) {\n      setDocRecord(doc);\n      const warn = checkWarning(doc);\n      if (warn) {\n        setWarn(warn);\n      } else {\n        onSubmit(doc);\n      }\n    }\n  }, [onSubmit, values]);\n\n  useEffect(() => {\n    setHasErrors(checkIfHasError(errors));\n  }, [errors]);\n\n  const onFieldChanged = useCallback((name) => (val) => {\n    setValues({ ...values, [name]: val });\n    if (errors[name]) {\n      setErrors({ ...errors, [name]: null });\n    }\n  }, [values, errors]);\n\n  return (\n    <MuiThemeProvider theme={Theme}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{flexGrow: 1}}>\n            Form nhập dữ liệu\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className=\"mainView\">\n        <Card style={classes.cardStyle}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\n              Form nhập dữ liệu hỗ trợ truyền thông\n            </Typography>\n            {!success && <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom={true}>\n              Chúng mình sẽ copy các thông tin bạn nhập dưới đây và đăng lên page, vậy nên các bạn hãy chú ý viết một cách rõ ràng, dễ hiểu cho người đọc nhé!\n            </Typography>}\n            {!success && <Typography variant=\"body1\" component=\"small\" color=\"textSecondary\">\n              (Các ô có dâu * là bắt buộc)\n            </Typography>}\n            {success && <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom={true}>\n              Dữ liệu bạn nhập đã được lưu lại.<br/>Chúng mình sẽ thông báo với bạn ngay khi bài đăng được duyệt!\n            </Typography>}\n          </CardContent>        \n        </Card>\n\n        {!success && FormQuestions.map(q => {\n          // q does not depends on other question\n          // OR q does depends on other question and that question is true\n          if (!q.dependsOn || (q.dependsOn && values[q.dependsOn])) {\n            const name = q.name;\n            const elem = q.element({\n              value: values[name],\n              key: name,\n              onChange: onFieldChanged(name),\n              error: errors[name],\n            });\n            return elem;\n          } else {\n            return null;\n          }\n        })}\n\n        {!success && <Card style={classes.cardStyle}>\n          <CardContent>\n            <div>\n              <small>Đừng quên bấm nút \"Hoàn thành\" khi bạn đã điền xong nhé:<br/><br/></small>\n              <Button \n                color=\"primary\"\n                variant=\"contained\"\n                onClick={onPreSubmit}\n                disabled={hasError}\n              >Hoàn thành</Button>\n              {hasError && <p className=\"error\">\n                Vẫn còn một vài ô điền có vấn đề. Bạn hãy kiểm tra lại nhé.\n              </p>}\n              <br/>\n              <br/>\n              <small>\n                ------<br/>\n                😸 Jiji: Hệ thống form điền này đang trong giai đoạn thử nghiệm.<br/>Nếu bạn gặp lỗi gì, hãy inbox cho Jiji nhé!\n              </small>\n            </div>\n          </CardContent>        \n        </Card>}\n\n        {/* Copyright */}\n        <center>\n          <br/><br/>\n          Developed by&nbsp;\n          <b><a href=\"https://ngxson.com\" target=\"_blank\" rel=\"noopener noreferrer\">Nui</a></b><br/>\n          Version {Config.VERSION}\n          <br/><br/>\n        </center>\n      </div>\n\n      {loading && <div className=\"loading-overlay\">\n        <div>\n          <CircularProgress /><br/>\n          Đang gửi dữ liệu...\n        </div>\n      </div>}\n\n      <FormConfirmation\n        warn={warn}\n        onSubmit={onSubmit}\n        clearWarn={() => setWarn(null)}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default Form;","import Form from './Form';\nexport default Form;"],"sourceRoot":""}